name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.value }}
    steps:
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - uses: actions/checkout@v4
        with:
          repository: 'lune-org/lune'
          ref: 'main'

      - name: Get version from manifest
        uses: SebRollen/toml-action@v1.2.0
        id: get_version
        with:
          file: crates/lune/Cargo.toml
          field: package.version

  build:
    needs: ["init"]
    strategy:
      fail-fast: false

    name: Build - Linux x86_64 (musl)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'lune-org/lune'
          ref: 'main'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      - name: Install Just
        uses: extractions/setup-just@v2

      - name: Install build tooling (x86_64-unknown-linux-musl)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y musl-tools clang llvm build-essential

      - name: Build binary
        run: just build --release --target x86_64-unknown-linux-musl

      - name: Create release archive
        run: just zip-release x86_64-unknown-linux-musl

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: lune-${{ needs.init.outputs.version }}-linux-x86_64-musl
          path: release.zip
        
  release-github:
    name: Release (GitHub)
    runs-on: ubuntu-latest
    needs: ["init", "build"]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'lune-org/lune'
          ref: 'main'

      - name: Install Just
        uses: extractions/setup-just@v2

      - name: Download releases
        uses: actions/download-artifact@v4
        with:
          path: ./releases

      - name: Unpack releases
        run: just unpack-releases "./releases"

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ needs.init.outputs.version }}
          tag_name: v${{ needs.init.outputs.version }}
          fail_on_unmatched_files: true
          files: ./releases/*.zip
          draft: true